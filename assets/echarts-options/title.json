{
    "id": {
        "desc": " 组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。 "
    },
    "show": {
        "desc": " 是否显示标题组件。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "text": {
        "desc": " 主标题文本，支持使用 \\n 换行。 ",
        "uiControl": {
            "type": "text"
        }
    },
    "link": {
        "desc": " 主标题文本超链接。 "
    },
    "target": {
        "desc": " 指定窗口打开主标题超链接。 **可选：*** 'self' 当前窗口打开\n* 'blank' 新窗口打开\n\n"
    },
    "textStyle.color": {
        "desc": " 主标题文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "'#333'"
        }
    },
    "textStyle.fontStyle": {
        "desc": " 主标题文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "textStyle.fontWeight": {
        "desc": " 主标题文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "textStyle.fontFamily": {
        "desc": " 主标题文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "textStyle.fontSize": {
        "desc": " 主标题文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "18",
            "min": "1",
            "step": "1"
        }
    },
    "textStyle.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "textStyle.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "textStyle.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "textStyle.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "textStyle.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "textStyle.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "textStyle.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "textStyle.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "textStyle.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 "
    },
    "textStyle.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n"
    },
    "textStyle.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "textStyle.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "textStyle.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "textStyle.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "textStyle.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "textStyle.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "textStyle.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "textStyle.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "textStyle.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "textStyle.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "textStyle.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "textStyle.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "textStyle.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "textStyle.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "textStyle.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "textStyle.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 "
    },
    "textStyle.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 "
    },
    "textStyle.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "textStyle.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "textStyle.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "textStyle.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtext": {
        "desc": " 副标题文本，支持使用 \\n 换行。 ",
        "uiControl": {
            "type": "text"
        }
    },
    "sublink": {
        "desc": " 副标题文本超链接。 "
    },
    "subtarget": {
        "desc": " 指定窗口打开副标题超链接，可选： \n\n* 'self' 当前窗口打开\n* 'blank' 新窗口打开\n\n"
    },
    "subtextStyle.color": {
        "desc": " 副标题文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "'#aaa'"
        }
    },
    "subtextStyle.fontStyle": {
        "desc": " 副标题文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "subtextStyle.fontWeight": {
        "desc": " 副标题文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "subtextStyle.fontFamily": {
        "desc": " 副标题文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "subtextStyle.fontSize": {
        "desc": " 副标题文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "subtextStyle.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "subtextStyle.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "subtextStyle.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "subtextStyle.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "subtextStyle.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "subtextStyle.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "subtextStyle.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "subtextStyle.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "subtextStyle.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "subtextStyle.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "subtextStyle.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 "
    },
    "subtextStyle.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n"
    },
    "subtextStyle.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "subtextStyle.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "subtextStyle.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "subtextStyle.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "subtextStyle.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "subtextStyle.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "subtextStyle.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "subtextStyle.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "subtextStyle.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "subtextStyle.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "subtextStyle.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "subtextStyle.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "subtextStyle.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "subtextStyle.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "subtextStyle.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "subtextStyle.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 "
    },
    "subtextStyle.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 "
    },
    "subtextStyle.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "textAlign": {
        "desc": " 整体（包括 text 和 subtext）的水平对齐。 可选值：'auto'、'left'、'right'、'center'。 ",
        "uiControl": {
            "type": "enum",
            "options": "auto,left,center,right",
            "default": "auto"
        }
    },
    "textVerticalAlign": {
        "desc": " 整体（包括 text 和 subtext）的垂直对齐。 可选值：'auto'、'top'、'bottom'、'middle'。 ",
        "uiControl": {
            "type": "enum",
            "options": "auto,top,middle,bottom",
            "default": "auto"
        }
    },
    "triggerEvent": {
        "desc": " 是否触发事件。 "
    },
    "padding": {
        "desc": " 标题内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。 使用示例： \n\n    // 设置内边距为 5\n    padding: 5\n    // 设置上下的内边距为 5，左右的内边距为 10\n    padding: [5, 10]\n    // 分别设置四个方向的内边距\n    padding: [\n        5,  // 上\n        10, // 右\n        5,  // 下\n        10, // 左\n    ]\n    \n\n",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "itemGap": {
        "desc": " 主副标题之间的间距。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "default": "10",
            "step": "1"
        }
    },
    "zlevel": {
        "desc": " 所有图形的 zlevel 值。 zlevel用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的zlevel。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。 zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。 "
    },
    "z": {
        "desc": " 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。 z相比zlevel优先级更低，而且不会创建新的 Canvas。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "left": {
        "desc": " title 组件离容器左侧的距离。 left 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比，也可以是 'left', 'center', 'right'。 如果 left 的值为'left', 'center', 'right'，组件会根据相应的位置自动对齐。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "top": {
        "desc": " title 组件离容器上侧的距离。 top 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比，也可以是 'top', 'middle', 'bottom'。 如果 top 的值为'top', 'middle', 'bottom'，组件会根据相应的位置自动对齐。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "right": {
        "desc": " title 组件离容器右侧的距离。 right 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比。 默认自适应。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "bottom": {
        "desc": " title 组件离容器下侧的距离。 bottom 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比。 默认自适应。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "backgroundColor": {
        "desc": " 标题背景色，默认透明。 \n\n> 颜色可以使用 RGB 表示，比如 > 'rgb(128, 128, 128)'>  ，如果想要加上 alpha 通道，可以使用 RGBA，比如 > 'rgba(128, 128, 128, 0.5)'> ，也可以使用十六进制格式，比如 > '#ccc'",
        "uiControl": {
            "type": "color"
        }
    },
    "borderColor": {
        "desc": " 标题的边框颜色。支持的颜色格式同 backgroundColor。 ",
        "uiControl": {
            "type": "color",
            "default": "#ccc"
        }
    },
    "borderWidth": {
        "desc": " 标题的边框线宽。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "min": "0",
            "step": "0.5"
        }
    },
    "borderRadius": {
        "desc": " 圆角半径，单位px，支持传入数组分别指定 4 个圆角半径。 如: \n\n    borderRadius: 5, // 统一设置四个角的圆角大小\n    borderRadius: [5, 5, 0, 0] //（顺时针左上，右上，右下，左下）\n    \n\n",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT,RB,LB"
        }
    },
    "shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n**注意**：此配置项生效的前提是，设置了 show: true 以及值不为 tranparent 的背景色 backgroundColor。 ",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 **注意**：此配置项生效的前提是，设置了 show: true。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 **注意**：此配置项生效的前提是，设置了 show: true。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 **注意**：此配置项生效的前提是，设置了 show: true。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    }
}