{
    "id": {
        "desc": " 组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。 "
    },
    "zlevel": {
        "desc": " 所有图形的 zlevel 值。 zlevel用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的zlevel。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。 zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。 "
    },
    "z": {
        "desc": " 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。 z相比zlevel优先级更低，而且不会创建新的 Canvas。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "center": {
        "desc": " 极坐标系的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标。 支持设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度。 **使用示例：**    // 设置成绝对的像素值\n    center: [400, 300]\n    // 设置成相对的百分比\n    center: ['50%', '50%']\n    \n\n",
        "uiControl": {
            "type": "percentvector",
            "dims": "x,y"
        }
    },
    "radius": {
        "desc": "\n的半径。可以为如下类型：\n\n* number：直接指定外半径值。\n* string：例如，'20%'，表示外半径为可视区尺寸（容器高宽中较小一项）的 20% 长度。\n* Array.<number|string>：数组的第一项是内半径，第二项是外半径。每一项遵从上述 number string 的描述。\n",
        "uiControl": {
            "type": "percentvector",
            "dims": "inner,outer",
            "default": "0%, 75%"
        }
    },
    "tooltip": {
        "desc": " 本坐标系特定的 tooltip 设定。 \n\n- - -\n\n**提示框组件的通用介绍：** 提示框组件可以设置在多种地方： \n\n* 可以设置在全局，即 [tooltip][0]\n* 可以设置在坐标系中，即 [grid.tooltip][1]、[polar.tooltip][2]、[single.tooltip][3]\n* 可以设置在系列中，即 [series.tooltip][4]\n* 可以设置在系列的每个数据项中，即 [series.data.tooltip][5]\n\n- - -\n\n\n\n[0]: #tooltip\n[1]: #grid.tooltip\n[2]: #polar.tooltip\n[3]: #single.tooltip\n[4]: #series.tooltip\n[5]: #series.data.tooltip",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.show": {
        "desc": " 是否显示提示框组件。 包括提示框浮层和 [axisPointer][0]。\n\n[0]: #tooltip.axisPointer",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "tooltip.trigger": {
        "desc": " 触发类型。 可选： \n\n* 'item' 数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。\n* 'axis' 坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用。 在 ECharts 2.x 中只支持类目轴上使用 axis trigger，在 ECharts 3 中支持在[直角坐标系][0]和[极坐标系][1]上的所有类型的轴。并且可以通过 [axisPointer.axis][2] 指定坐标轴。\n* 'none' 什么都不触发。\n\n\n\n[0]: #grid\n[1]: #polar\n[2]: #tooltip.axisPointer.axis",
        "uiControl": {
            "type": "enum",
            "options": "item,axis,none",
            "default": "item"
        }
    },
    "tooltip.axisPointer": {
        "desc": " 坐标轴指示器配置项。 tooltip.axisPointer 是配置坐标轴指示器的快捷方式。实际上坐标轴指示器的全部功能，都可以通过轴上的 axisPointer 配置项完成（例如 [xAxis.axisPointer][0] 或 [angleAxis.axisPointer][1]）。但是使用 tooltip.axisPointer 在简单场景下会更方便一些。 \n\n**> 注意：**> tooltip.axisPointer>  中诸配置项的优先级低于轴上的 axisPointer 的配置项。 - - -\n\n坐标轴指示器是指示坐标轴当前刻度的工具。 如下例，鼠标悬浮到图上，可以出现标线和刻度文本。 暂时无法显示 上例中，使用了 [axisPointer.link][2] 来关联不同的坐标系中的 axisPointer。 坐标轴指示器也有适合触屏的交互方式，如下： 暂时无法显示 坐标轴指示器在多轴的场景能起到辅助作用： 暂时无法显示 暂时无法显示 \n\n- - -\n\n**> 注意：**>  一般来说，axisPointer 的具体配置项会配置在各个轴中（如 [> xAxis.axisPointer][0]> ）或者 > tooltip>  中（如 [> tooltip.axisPointer][3]> ）。 > 但是这几个选项只能配置在全局的 axisPointer 中：[> axisPointer.triggerOn][4]> 、[> axisPointer.link][2]> 。 - - -\n\n**如何显示 axisPointer：** 直角坐标系 [grid][5]、极坐标系 [polar][6]、单轴坐标系 [single][7] 中的每个轴都自己的 axisPointer。 他们的 axisPointer 默认不显示。有两种方法可以让他们显示： \n\n* 设置轴上的 axisPointer.show（例如 [xAxis.axisPointer.show][8]）为 true，则显示此轴的 axisPointer。\n* 设置 [tooltip.trigger][9] 设置为 'axis' 或者 [tooltip.axisPointer.type][10] 设置为 'cross'，则此时坐标系会自动选择显示哪个轴的 axisPointer，也可以使用 [tooltip.axisPointer.axis][11] 改变这种选择。注意，轴上如果设置了 axisPointer，会覆盖此设置。\n\n- - -\n\n**如何显示 axisPointer 的 label：** axisPointer 的 label 默认不显示（也就是默认只显示指示线），除非： \n\n* 设置轴上的 axisPointer.label.show（例如 [xAxis.axisPointer.label.show][8]）为 true，则显示此轴的 axisPointer 的 label。\n* 设置 [tooltip.axisPointer.type][10] 为 'cross' 时会自动显示 axisPointer 的 label。\n\n- - -\n\n**关于触屏的 axisPointer 的设置** 设置轴上的 axisPointer.handle.show（例如 [xAxis.axisPointer.handle.show][12] 为 true 则会显示出此 axisPointer 的拖拽按钮。（polar 坐标系暂不支持此功能）。 **注意：** 如果发现此时 tooltip 效果不良好，可设置 [tooltip.triggerOn][13] 为 'none'（于是效果为：手指按住按钮则显示 tooltip，松开按钮则隐藏 tooltip），或者 [tooltip.alwaysShowContent][14] 为 true（效果为 tooltip 一直显示）。 参见[例子][15]。 \n\n- - -\n\n**自动吸附到数据（snap）** 对于数值轴、时间轴，如果开启了 [snap][16]，则 axisPointer 会自动吸附到最近的点上。 \n\n- - -\n\n\n\n[0]: #xAxis.axisPointer\n[1]: #angleAxis.axisPointer\n[2]: #axisPointer.link\n[3]: #tooltip.axisPointer\n[4]: #axisPointer.triggerOn\n[5]: #grid\n[6]: #polar\n[7]: #single\n[8]: #xAxis.axisPointer.show\n[9]: #tooltip.trigger\n[10]: #tooltip.axisPointer.type\n[11]: #tooltip.axisPointer.axis\n[12]: #xAxis.axisPointer.handle.show\n[13]: #tooltip.triggerOn\n[14]: #tooltip.alwaysShowContent\n[15]: https://echarts.apache.org/examples/zh/editor.html?c=line-tooltip-touch&edit=1&reset=1\n[16]: #xAxis.axisPointer.snap",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.type": {
        "desc": " 指示器类型。 可选 \n\n* 'line' 直线指示器\n* 'shadow' 阴影指示器\n* 'none' 无指示器\n* 'cross' 十字准星指示器。其实是种简写，表示启用两个正交的轴的 axisPointer。\n\n",
        "uiControl": {
            "type": "enum",
            "options": "none,line,shadow,cross",
            "default": "line"
        }
    },
    "tooltip.axisPointer.axis": {
        "desc": " 指示器的坐标轴。 默认情况，坐标系会自动选择显示哪个轴的 axisPointer（默认取类目轴或者时间轴）。 可以是 'x', 'y', 'radius', 'angle'。 "
    },
    "tooltip.axisPointer.snap": {
        "desc": " 坐标轴指示器是否自动吸附到点上。默认自动判断。 这个功能在数值轴和时间轴上比较有意义，可以自动寻找细小的数值点。 "
    },
    "tooltip.axisPointer.z": {
        "desc": " 坐标轴指示器的 z 值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。 "
    },
    "tooltip.axisPointer.label": {
        "desc": " 坐标轴指示器的文本标签。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.label.show": {
        "desc": " 是否显示文本标签。如果 [tooltip.axisPointer.type][0] 设置为 'cross' 则默认显示标签，否则默认不显示。\n\n[0]: #tooltip.axisPointer.type"
    },
    "tooltip.axisPointer.label.precision": {
        "desc": " 文本标签中数值的小数点精度。默认根据当前轴的值自动判断。也可以指定如 2 表示保留两位小数。 "
    },
    "tooltip.axisPointer.label.formatter": {
        "desc": " 文本标签文字的格式化器。 如果为 string，可以是例如：formatter: 'some text {value} some text，其中 {value} 会被自动替换为轴的值。 如果为 function，可以是例如： **参数：**{Object} params: 含有： {Object} params.value: 轴当前值，如果 axis.type 为 'category' 时，其值为 axis.data 里的数值。如果 axis.type 为 'time'，其值为时间戳。 {Array.} params.seriesData: 一个数组，是当前 axisPointer 最近的点的信息，每项内容为 {string} params.axisDimension: 轴的维度名，例如直角坐标系中是 'x'、'y'，极坐标系中是 'radius'、'angle'。 {number} params.axisIndex: 轴的 index，0、1、2、... \n\n    {\n        componentType: 'series',\n        // 系列类型\n        seriesType: string,\n        // 系列在传入的 option.series 中的 index\n        seriesIndex: number,\n        // 系列名称\n        seriesName: string,\n        // 数据名，类目名\n        name: string,\n        // 数据在传入的 data 数组中的 index\n        dataIndex: number,\n        // 传入的原始数据项\n        data: Object,\n        // 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\n        value: number|Array|Object,\n        // 坐标轴 encode 映射信息，\n        // key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n        // value 必然为数组，不会为 null/undefied，表示 dimension index 。\n        // 其内容如：\n        // {\n        //     x: [2] // dimension index 为 2 的数据映射到 x 轴\n        //     y: [0] // dimension index 为 0 的数据映射到 y 轴\n        // }\n        encode: Object,\n        // 维度名列表\n        dimensionNames: Array,\n        // 数据的维度 index，如 0 或 1 或 2 ...\n        // 仅在雷达图中使用。\n        dimensionIndex: number,\n        // 数据图形的颜色\n        color: string,\n    \n    \n    \n    }\n    \n\n注：encode 和 dimensionNames 的使用方式，例如： 如果数据为： \n\n    dataset: {\n        source: [\n            ['Matcha Latte', 43.3, 85.8, 93.7],\n            ['Milk Tea', 83.1, 73.4, 55.1],\n            ['Cheese Cocoa', 86.4, 65.2, 82.5],\n            ['Walnut Brownie', 72.4, 53.9, 39.1]\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.encode.y[0]]\n    \n\n如果数据为： \n\n    dataset: {\n        dimensions: ['product', '2015', '2016', '2017'],\n        source: [\n            {product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n            {product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n            {product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n            {product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.dimensionNames[params.encode.y[0]]]\n    \n\n每项内容还包括轴的信息： \n\n    {\n        axisDim: 'x', // 'x', 'y', 'angle', 'radius', 'single'\n        axisId: 'xxx',\n        axisName: 'xxx',\n        axisIndex: 3,\n        axisValue: 121, // 当前 axisPointer 对应的 value。\n        axisValueLabel: '文本'\n    }\n    \n\n**返回值：** 显示的 string。 例如： \n\n    formatter: function (params) {\n        // 假设此轴的 type 为 'time'。\n        return 'some text' + echarts.format.formatTime(params.value);\n    }\n    \n\n"
    },
    "tooltip.axisPointer.label.margin": {
        "desc": " label 距离轴的距离。 "
    },
    "tooltip.axisPointer.label.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "'#fff'"
        }
    },
    "tooltip.axisPointer.label.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "tooltip.axisPointer.label.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "tooltip.axisPointer.label.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "tooltip.axisPointer.label.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "tooltip.axisPointer.label.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "tooltip.axisPointer.label.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "tooltip.axisPointer.label.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "tooltip.axisPointer.label.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "tooltip.axisPointer.label.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "tooltip.axisPointer.label.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "tooltip.axisPointer.label.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "tooltip.axisPointer.label.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "tooltip.axisPointer.label.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 "
    },
    "tooltip.axisPointer.label.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n"
    },
    "tooltip.axisPointer.label.padding": {
        "desc": " axisPointer内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。 使用示例： \n\n    // 设置内边距为 5\n    padding: 5\n    // 设置上下的内边距为 5，左右的内边距为 10\n    padding: [5, 10]\n    // 分别设置四个方向的内边距\n    padding: [\n        5,  // 上\n        10, // 右\n        5,  // 下\n        10, // 左\n    ]\n    \n\n",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "tooltip.axisPointer.label.backgroundColor": {
        "desc": " 文本标签的背景颜色，默认是和 [axis.axisLine.lineStyle.color][0] 相同。\n\n[0]: #xAxis.axisLine.lineStyle.color"
    },
    "tooltip.axisPointer.label.borderColor": {
        "desc": " 文本标签的边框颜色。 "
    },
    "tooltip.axisPointer.label.borderWidth": {
        "desc": " 文本标签的边框宽度。 "
    },
    "tooltip.axisPointer.label.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "3",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": "#aaa"
        }
    },
    "tooltip.axisPointer.label.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.label.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.lineStyle": {
        "desc": "[axisPointer.type][0] 为 'line' 时有效。\n\n[0]: #tooltip.axisPointer.type",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.lineStyle.color": {
        "desc": " 线的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "tooltip.axisPointer.lineStyle.width": {
        "desc": " 线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.lineStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "tooltip.axisPointer.lineStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "tooltip.axisPointer.lineStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "tooltip.axisPointer.lineStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "tooltip.axisPointer.lineStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "tooltip.axisPointer.lineStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.lineStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "tooltip.axisPointer.lineStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.lineStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.lineStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "tooltip.axisPointer.shadowStyle": {
        "desc": "[axisPointer.type][0] 为 'shadow' 时有效。\n\n[0]: #tooltip.axisPointer.type",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.shadowStyle.color": {
        "desc": " 填充的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "tooltip.axisPointer.shadowStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.shadowStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "tooltip.axisPointer.shadowStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.shadowStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.shadowStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "tooltip.axisPointer.crossStyle": {
        "desc": "[axisPointer.type][0] 为 'cross' 时有效。\n\n[0]: #tooltip.axisPointer.type",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.crossStyle.color": {
        "desc": " 线的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "tooltip.axisPointer.crossStyle.width": {
        "desc": " 线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.crossStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "tooltip.axisPointer.crossStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "tooltip.axisPointer.crossStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "tooltip.axisPointer.crossStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "tooltip.axisPointer.crossStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "tooltip.axisPointer.crossStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.crossStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "tooltip.axisPointer.crossStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.crossStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.axisPointer.crossStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "tooltip.axisPointer.animation": {
        "desc": " 是否开启动画。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true",
            "clean": "true"
        }
    },
    "tooltip.axisPointer.animationThreshold": {
        "desc": " 是否开启动画的阈值，当单个系列显示的图形数量大于这个阈值时会关闭动画。 "
    },
    "tooltip.axisPointer.animationDuration": {
        "desc": " 初始动画的时长，支持回调函数，可以通过每个数据返回不同的时长实现更戏剧的初始动画效果： \n\n    animationDuration: function (idx) {\n        // 越往后的数据时长越大\n        return idx * 100;\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "default": "1000",
            "step": "20",
            "clean": "true"
        }
    },
    "tooltip.axisPointer.animationEasing": {
        "desc": " 初始动画的缓动效果。不同的缓动效果可以参考 [缓动示例][0]。\n\n[0]: https://echarts.apache.org/examples/zh/editor.html?c=line-easing",
        "uiControl": {
            "type": "enum",
            "options": "linear,quadraticIn,quadraticOut,quadraticInOut,cubicIn,cubicOut,cubicInOut,quarticIn,quarticOut,quarticInOut,quinticIn,quinticOut,quinticInOut,sinusoidalIn,sinusoidalOut,sinusoidalInOut,exponentialIn,exponentialOut,exponentialInOut,circularIn,circularOut,circularInOut,elasticIn,elasticOut,elasticInOut,backIn,backOut,backInOut,bounceIn,bounceOut,bounceInOut",
            "clean": "true"
        }
    },
    "tooltip.axisPointer.animationDelay": {
        "desc": " 初始动画的延迟，支持回调函数，可以通过每个数据返回不同的 delay 时间实现更戏剧的初始动画效果。 如下示例： \n\n    animationDelay: function (idx) {\n        // 越往后的数据延迟越大\n        return idx * 100;\n    }\n    \n\n也可以看[该示例][0]\n\n[0]: https://echarts.apache.org/examples/zh/editor.html?c=bar-animation-delay",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.axisPointer.animationDurationUpdate": {
        "desc": " 数据更新动画的时长。 支持回调函数，可以通过每个数据返回不同的时长实现更戏剧的更新动画效果： \n\n    animationDurationUpdate: function (idx) {\n        // 越往后的数据时长越大\n        return idx * 100;\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "default": "1000",
            "step": "20"
        }
    },
    "tooltip.axisPointer.animationEasingUpdate": {
        "desc": " 数据更新动画的缓动效果。 ",
        "uiControl": {
            "type": "enum",
            "options": "linear,quadraticIn,quadraticOut,quadraticInOut,cubicIn,cubicOut,cubicInOut,quarticIn,quarticOut,quarticInOut,quinticIn,quinticOut,quinticInOut,sinusoidalIn,sinusoidalOut,sinusoidalInOut,exponentialIn,exponentialOut,exponentialInOut,circularIn,circularOut,circularInOut,elasticIn,elasticOut,elasticInOut,backIn,backOut,backInOut,bounceIn,bounceOut,bounceInOut"
        }
    },
    "tooltip.axisPointer.animationDelayUpdate": {
        "desc": " 数据更新动画的延迟，支持回调函数，可以通过每个数据返回不同的 delay 时间实现更戏剧的更新动画效果。 如下示例： \n\n    animationDelayUpdate: function (idx) {\n        // 越往后的数据延迟越大\n        return idx * 100;\n    }\n    \n\n也可以看[该示例][0]\n\n[0]: https://echarts.apache.org/examples/zh/editor.html?c=bar-animation-delay"
    },
    "tooltip.position": {
        "desc": "\n提示框浮层的位置，默认不设置时位置会跟随鼠标的位置。\n\n可选：\n\n* Array\n\n通过数组表示提示框浮层的位置，支持数字设置绝对位置，百分比设置相对位置。\n\n示例:\n```javascript\n// 绝对位置，相对于容器左侧 10px, 上侧 10 px\nposition: [10, 10]\n// 相对位置，放置在容器正中间\nposition: ['50%', '50%']\n```\n\n* Function\n\n回调函数，格式如下：\n\n```javascript\n(point: Array, params: Object|Array.<Object>, dom: HTMLDomElement, rect: Object, size: Object) => Array\n```\n\n**参数**\npoint: 鼠标位置，如 [20, 40]。\nparams: 同 formatter 的参数相同。\ndom: tooltip 的 dom 对象。\nrect: 只有鼠标在图形上时有效，是一个用 x , y , width , height四个属性表达的图形包围盒。\nsize: 包括 dom 的尺寸和 echarts 容器的当前尺寸，例如：{contentSize: [width, height], viewSize: [width, height]}。\n\n**返回值：**\n可以是一个表示 tooltip 位置的数组，数组值可以是绝对的像素值，也可以是相 百分比。\n也可以是一个对象，如：{left: 10, top: 30}，或者 {right: '20%', bottom: 40}。\n\n如下示例：\n\n```javascript\nposition: function (point, params, dom, rect, size) {\n    // 固定在顶部\n    return [point[0], '10%'];\n}\n```\n\n或者：\n\n```javascript\nposition: function (pos, params, dom, rect, size) {\n    // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n    var obj = {top: 60};\n    obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n    return obj;\n}\n```\n\n* 'inside'\n    鼠标所在图形的内部中心位置，只在 trigger 为 'item' 的时候有效。\n\n* 'top'\n    鼠标所在图形上侧，只在 trigger 为 'item' 的时候有效。\n\n* 'left'\n    鼠标所在图形左侧，只在 trigger 为 'item' 的时候有效。\n\n* 'right'\n    鼠标所在图形右侧，只在 trigger 为 'item' 的时候有效。\n\n* 'bottom'\n    鼠标所在图形底侧，只在 trigger 为 'item' 的时候有效。\n"
    },
    "tooltip.formatter": {
        "desc": " 提示框浮层内容格式器，支持字符串模板和回调函数两种形式。 **1. 字符串模板** 模板变量有 {a}, {b}，{c}，{d}，{e}，分别表示系列名，数据名，数据值等。 在 [trigger][0] 为 'axis' 的时候，会有多个系列的数据，此时可以通过 {a0}, {a1}, {a2} 这种后面加索引的方式表示系列的索引。 不同图表类型下的 {a}，{b}，{c}，{d} 含义不一样。 其中变量{a}, {b}, {c}, {d}在不同图表类型下代表数据含义为： \n\n* 折线（区域）图、柱状（条形）图、K线图 : {a}（系列名称），{b}（类目值），{c}（数值）, {d}（无）\n* 散点图（气泡）图 : {a}（系列名称），{b}（数据名称），{c}（数值数组）, {d}（无）\n* 地图 : {a}（系列名称），{b}（区域名称），{c}（合并数值）, {d}（无）\n* 饼图、仪表盘、漏斗图: {a}（系列名称），{b}（数据项名称），{c}（数值）, {d}（百分比）\n\n更多其它图表模板变量的含义可以见相应的图表的 label.formatter 配置项。 **示例：**    formatter: '{b0}: {c0}  \n{b1}: {c1}'\n    \n\n**2. 回调函数** 回调函数格式： \n\n    (params: Object|Array, ticket: string, callback: (ticket: string, html: string)) => string | HTMLElement | HTMLElement[]\n    \n\n支持返回 HTML 字符串或者创建的 DOM 实例。 第一个参数 params 是 formatter 需要的数据集。格式如下： \n\n    {\n        componentType: 'series',\n        // 系列类型\n        seriesType: string,\n        // 系列在传入的 option.series 中的 index\n        seriesIndex: number,\n        // 系列名称\n        seriesName: string,\n        // 数据名，类目名\n        name: string,\n        // 数据在传入的 data 数组中的 index\n        dataIndex: number,\n        // 传入的原始数据项\n        data: Object,\n        // 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\n        value: number|Array|Object,\n        // 坐标轴 encode 映射信息，\n        // key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n        // value 必然为数组，不会为 null/undefied，表示 dimension index 。\n        // 其内容如：\n        // {\n        //     x: [2] // dimension index 为 2 的数据映射到 x 轴\n        //     y: [0] // dimension index 为 0 的数据映射到 y 轴\n        // }\n        encode: Object,\n        // 维度名列表\n        dimensionNames: Array,\n        // 数据的维度 index，如 0 或 1 或 2 ...\n        // 仅在雷达图中使用。\n        dimensionIndex: number,\n        // 数据图形的颜色\n        color: string,\n    \n    \n        // 饼图的百分比\n        percent: number,\n    \n    \n    }\n    \n\n注：encode 和 dimensionNames 的使用方式，例如： 如果数据为： \n\n    dataset: {\n        source: [\n            ['Matcha Latte', 43.3, 85.8, 93.7],\n            ['Milk Tea', 83.1, 73.4, 55.1],\n            ['Cheese Cocoa', 86.4, 65.2, 82.5],\n            ['Walnut Brownie', 72.4, 53.9, 39.1]\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.encode.y[0]]\n    \n\n如果数据为： \n\n    dataset: {\n        dimensions: ['product', '2015', '2016', '2017'],\n        source: [\n            {product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n            {product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n            {product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n            {product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.dimensionNames[params.encode.y[0]]]\n    \n\n在 [trigger][0] 为 'axis' 的时候，或者 tooltip 被 [axisPointer][1] 触发的时候，params 是多个系列的数据数组。其中每项内容格式同上，并且， \n\n    {\n        componentType: 'series',\n        // 系列类型\n        seriesType: string,\n        // 系列在传入的 option.series 中的 index\n        seriesIndex: number,\n        // 系列名称\n        seriesName: string,\n        // 数据名，类目名\n        name: string,\n        // 数据在传入的 data 数组中的 index\n        dataIndex: number,\n        // 传入的原始数据项\n        data: Object,\n        // 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\n        value: number|Array|Object,\n        // 坐标轴 encode 映射信息，\n        // key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n        // value 必然为数组，不会为 null/undefied，表示 dimension index 。\n        // 其内容如：\n        // {\n        //     x: [2] // dimension index 为 2 的数据映射到 x 轴\n        //     y: [0] // dimension index 为 0 的数据映射到 y 轴\n        // }\n        encode: Object,\n        // 维度名列表\n        dimensionNames: Array,\n        // 数据的维度 index，如 0 或 1 或 2 ...\n        // 仅在雷达图中使用。\n        dimensionIndex: number,\n        // 数据图形的颜色\n        color: string,\n    \n    \n    \n    }\n    \n\n注：encode 和 dimensionNames 的使用方式，例如： 如果数据为： \n\n    dataset: {\n        source: [\n            ['Matcha Latte', 43.3, 85.8, 93.7],\n            ['Milk Tea', 83.1, 73.4, 55.1],\n            ['Cheese Cocoa', 86.4, 65.2, 82.5],\n            ['Walnut Brownie', 72.4, 53.9, 39.1]\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.encode.y[0]]\n    \n\n如果数据为： \n\n    dataset: {\n        dimensions: ['product', '2015', '2016', '2017'],\n        source: [\n            {product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n            {product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n            {product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n            {product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n        ]\n    }\n    \n\n则可这样得到 y 轴对应的 value： \n\n    params.value[params.dimensionNames[params.encode.y[0]]]\n    \n\n**注：** ECharts 2.x 使用数组表示各参数的方式不再支持。 第二个参数 ticket 是异步回调标识，配合第三个参数 callback 使用。 第三个参数 callback 是异步回调，在提示框浮层内容是异步获取的时候，可以通过 callback 传入上述的 ticket 和 html 更新提示框浮层内容。 示例： \n\n    formatter: function (params, ticket, callback) {\n        $.get('detail?name=' + params.name, function (content) {\n            callback(ticket, toHTML(content));\n        });\n        return 'Loading';\n    }\n    \n\n\n\n[0]: #tooltip.trigger\n[1]: #xAxis.axisPointer"
    },
    "tooltip.backgroundColor": {
        "desc": " 提示框浮层的背景颜色。 "
    },
    "tooltip.borderColor": {
        "desc": " 提示框浮层的边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#333"
        }
    },
    "tooltip.borderWidth": {
        "desc": " 提示框浮层的边框宽。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "tooltip.padding": {
        "desc": " 提示框浮层内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。 使用示例： \n\n    // 设置内边距为 5\n    padding: 5\n    // 设置上下的内边距为 5，左右的内边距为 10\n    padding: [5, 10]\n    // 分别设置四个方向的内边距\n    padding: [\n        5,  // 上\n        10, // 右\n        5,  // 下\n        10, // 左\n    ]\n    \n\n",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "tooltip.textStyle": {
        "desc": " 提示框浮层的文本样式。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "tooltip.textStyle.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "'#fff'"
        }
    },
    "tooltip.textStyle.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "tooltip.textStyle.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "tooltip.textStyle.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "tooltip.textStyle.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "14",
            "min": "1",
            "step": "1"
        }
    },
    "tooltip.textStyle.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "tooltip.textStyle.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "tooltip.textStyle.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "tooltip.textStyle.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "tooltip.textStyle.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.textStyle.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "tooltip.textStyle.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "tooltip.textStyle.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "tooltip.textStyle.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "tooltip.textStyle.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "tooltip.textStyle.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "tooltip.textStyle.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "tooltip.textStyle.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 "
    },
    "tooltip.textStyle.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n"
    },
    "tooltip.extraCssText": {
        "desc": " 额外附加到浮层的 css 样式。如下为浮层添加阴影的示例： \n\n    extraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);'\n    \n\n",
        "uiControl": {
            "type": "text"
        }
    }
}