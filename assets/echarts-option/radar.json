{
    "id": {
        "desc": " 组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。 ",
        "uiControl": {
            "type": "string"
        }
    },
    "zlevel": {
        "desc": " 所有图形的 zlevel 值。 zlevel用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的zlevel。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。 zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。 ",
        "uiControl": {
            "default": 0
        }
    },
    "z": {
        "desc": " 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。 z相比zlevel优先级更低，而且不会创建新的 Canvas。 ",
        "uiControl": {
            "default": 2
        }
    },
    "center": {
        "desc": " 的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标。 支持设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度。 **使用示例：**    // 设置成绝对的像素值\n    center: [400, 300]\n    // 设置成相对的百分比\n    center: ['50%', '50%']\n    \n\n",
        "uiControl": {
            "type": "percentvector",
            "dims": "x,y"
        }
    },
    "radius": {
        "desc": "\n的半径。可以为如下类型：\n\n* number：直接指定外半径值。\n* string：例如，'20%'，表示外半径为可视区尺寸（容器高宽中较小一项）的 20% 长度。\n* Array.<number|string>：数组的第一项是内半径，第二项是外半径。每一项遵从上述 number string 的描述。\n",
        "uiControl": {
            "type": "percentvector",
            "dims": "inner,outer",
            "default": "0%, 75%"
        }
    },
    "startAngle": {
        "desc": " 坐标系起始角度，也就是第一个指示器轴的角度。 ",
        "uiControl": {
            "default": 90
        }
    },
    "name": {
        "desc": " 雷达图每个指示器名称的配置项。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "name.show": {
        "desc": " 是否显示指示器名称。 ",
        "uiControl": {
            "default": true
        }
    },
    "name.formatter": {
        "desc": " 指示器名称显示的格式器。支持字符串和回调函数，如下示例： \n\n    // 使用字符串模板，模板变量为指示器名称 {value}\n    formatter: '【{value}】'\n    // 使用回调函数，第一个参数是指示器名称，第二个参数是指示器配置项\n    formatter: function (value, indicator) {\n        return '【' + value + '】';\n    }\n    \n\n",
        "uiControl": {
            "type": [
                "string",
                "Function"
            ]
        }
    },
    "name.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "'#333'"
        }
    },
    "name.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "name.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "name.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "name.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "name.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "name.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "name.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "name.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "name.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "name.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "name.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "name.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "name.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "name.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "name.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "name.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "name.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "name.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "name.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "name.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 ",
        "uiControl": {
            "default": "'...'"
        }
    },
    "name.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n",
        "uiControl": {
            "default": "'none'"
        }
    },
    "name.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "name.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "name.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "name.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "name.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "name.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "name.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "name.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "name.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "name.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "name.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "name.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "name.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "name.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "name.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "name.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "name.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "name.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "name.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "name.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "name.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "name.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "name.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "name.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "nameGap": {
        "desc": " 指示器名称和指示器轴的距离。 ",
        "uiControl": {
            "type": "number",
            "default": "15",
            "step": "1"
        }
    },
    "splitNumber": {
        "desc": " 指示器轴的分割段数。 ",
        "uiControl": {
            "type": "number",
            "default": "15",
            "step": "1"
        }
    },
    "shape": {
        "desc": " 雷达图绘制类型，支持 'polygon' 和 'circle'。 ",
        "uiControl": {
            "type": "enum",
            "options": "polygon,circle"
        }
    },
    "scale": {
        "desc": " 是否是脱离 0 值比例。设置成 true 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。 ",
        "uiControl": {
            "type": "boolean"
        }
    },
    "silent": {
        "desc": " 坐标轴是否是静态无法交互。 ",
        "uiControl": {
            "default": false
        }
    },
    "triggerEvent": {
        "desc": " 坐标轴的标签是否响应和触发鼠标事件，默认不响应。 事件参数如下： \n\n    {\n        // 组件类型，xAxis, yAxis, radiusAxis, angleAxis\n        // 对应组件类型都会有一个属性表示组件的 index，例如 xAxis 就是 xAxisIndex\n        componentType: string,\n        // 未格式化过的刻度值, 点击刻度标签有效\n        value: '',\n        // 坐标轴名称, 点击坐标轴名称有效\n        name: ''\n    }\n    \n\n",
        "uiControl": {
            "default": false
        }
    },
    "axisLine": {
        "desc": " 坐标轴轴线相关设置。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "axisLine.show": {
        "desc": " 是否显示坐标轴轴线。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "axisLine.symbol": {
        "desc": " 轴线两边的箭头。可以是字符串，表示两端使用同样的箭头；或者长度为 2 的字符串数组，分别表示两端的箭头。默认不显示箭头，即 'none'。两端都显示箭头可以设置为 'arrow'，只在末端显示箭头可以设置为 ['none', 'arrow']。 ",
        "uiControl": {
            "type": "icon",
            "default": "none"
        }
    },
    "axisLine.symbolSize": {
        "desc": " 轴线两边的箭头的大小，第一个数字表示宽度（垂直坐标轴方向），第二个数字表示高度（平行坐标轴方向）。 ",
        "uiControl": {
            "type": "vector",
            "default": "10,15"
        }
    },
    "axisLine.symbolOffset": {
        "desc": " 轴线两边的箭头的偏移，如果是数组，第一个数字表示起始箭头的偏移，第二个数字表示末端箭头的偏移；如果是数字，表示这两个箭头使用同样的偏移。 ",
        "uiControl": {
            "type": "vector",
            "default": "0,0"
        }
    },
    "axisLine.lineStyle.color": {
        "desc": " 坐标轴线线的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLine.lineStyle.width": {
        "desc": " 坐标轴线线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLine.lineStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisLine.lineStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisLine.lineStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "axisLine.lineStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "axisLine.lineStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "axisLine.lineStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLine.lineStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "axisLine.lineStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "axisLine.lineStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "axisLine.lineStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "axisTick": {
        "desc": " 坐标轴刻度相关设置。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "axisTick.show": {
        "desc": " 是否显示坐标轴刻度。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "axisTick.length": {
        "desc": " 坐标轴刻度的长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5",
            "default": "5"
        }
    },
    "axisTick.lineStyle": {
        "desc": " 刻度线的样式设置。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "axisTick.lineStyle.color": {
        "desc": " 刻度线的颜色，默认取 [axisTick.lineStyle.color][0]。\n\n[0]: #.axisTick.lineStyle.color",
        "uiControl": {
            "type": "Color"
        }
    },
    "axisTick.lineStyle.width": {
        "desc": " 坐标轴刻度线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisTick.lineStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisTick.lineStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisTick.lineStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "axisTick.lineStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "axisTick.lineStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "axisTick.lineStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisTick.lineStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "axisTick.lineStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "axisTick.lineStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "axisTick.lineStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "axisLabel": {
        "desc": " 坐标轴刻度标签的相关设置。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "axisLabel.show": {
        "desc": " 是否显示刻度标签。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "axisLabel.rotate": {
        "desc": " 刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。 旋转的角度从 -90 度到 90 度。 ",
        "uiControl": {
            "type": "angle",
            "min": "-90",
            "max": "90",
            "step": "1"
        }
    },
    "axisLabel.margin": {
        "desc": " 刻度标签与轴线之间的距离。 ",
        "uiControl": {
            "type": "number",
            "default": "8",
            "step": "0.5"
        }
    },
    "axisLabel.formatter": {
        "desc": " 刻度标签的内容格式器，支持字符串模板和回调函数两种形式。 示例: \n\n    // 使用字符串模板，模板变量为刻度默认标签 {value}\n    formatter: '{value} kg'\n    // 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\n    formatter: function (value, index) {\n        return value + 'kg';\n    }\n    \n\n- - -\n\n对于时间轴（[type][0]: 'time'），formatter 的字符串模板支持多种形式： \n\n* **字符串模板**：简单快速实现常用日期时间模板，string 类型\n* **回调函数**：自定义 formatter，可以用来实现复杂高级的格式，Function 类型\n* **分级模板**：为不同时间粒度的标签使用不同的 formatter，object 类型\n\n下面我们分别介绍这三种形式。 **字符串模板** 使用字符串模板是一种方便实现常用日期时间格式化方式的形式。如果字符串模板可以实现你的效果，那我们优先推荐使用此方式；如果无法实现，再考虑其他两种更复杂的方式。支持的模板如下： <table><thead><tr>分类模板取值（英文）取值（中文）</tr></thead><tbody><tr><td>Year</td><td>{yyyy}</td><td>e.g., 2020, 2021, ...</td><td>例：2020, 2021, ...</td></tr><tr><td></td><td>{yy}</td><td>00-99</td><td>00-99</td></tr><tr><td>Quarter</td><td>{Q}</td><td>1, 2, 3, 4</td><td>1, 2, 3, 4</td></tr><tr><td>Month</td><td>{MMMM}</td><td>e.g., January, February, ...</td><td>一月、二月、……</td></tr><tr><td></td><td>{MMM}</td><td>e.g., Jan, Feb, ...</td><td>1月、2月、……</td></tr><tr><td></td><td>{MM}</td><td>01-12</td><td>01-12</td></tr><tr><td></td><td>{M}</td><td>1-12</td><td>1-12</td></tr><tr><td>Day of Month</td><td>{dd}</td><td>01-31</td><td>01-31</td></tr><tr><td></td><td>{d}</td><td>1-31</td><td>1-31</td></tr><tr><td>Day of Week</td><td>{eeee}</td><td>Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday</td><td>星期日、星期一、星期二、星期三、星期四、星期五、星期六</td></tr><tr><td></td><td>{ee}</td><td>Sun, Mon, Tues, Wed, Thu, Fri, Sat</td><td>日、一、二、三、四、五、六</td></tr><tr><td></td><td>{e}</td><td>1-54</td><td>1-54</td></tr><tr><td>Hour</td><td>{HH}</td><td>00-23</td><td>00-23</td></tr><tr><td></td><td>{H}</td><td>0-23</td><td>0-23</td></tr><tr><td></td><td>{hh}</td><td>01-12</td><td>01-12</td></tr><tr><td></td><td>{h}</td><td>1-12</td><td>1-12</td></tr><tr><td>Minute</td><td>{mm}</td><td>00-59</td><td>00-59</td></tr><tr><td></td><td>{m}</td><td>0-59</td><td>0-59</td></tr><tr><td>Second</td><td>{ss}</td><td>00-59</td><td>00-59</td></tr><tr><td></td><td>{s}</td><td>0-59</td><td>0-59</td></tr><tr><td>Millisecond</td><td>{SSS}</td><td>000-999</td><td>000-999</td></tr><tr><td></td><td>{S}</td><td>0-999</td><td>0-999</td></tr></tbody></table>>  其他语言请参考相应[> 语言包][1]> 中的定义，语言包可以通过 [> echarts.registerLocale][2]>  注册。 示例: \n\n    formatter: '{yyyy}-{MM}-{dd}' // 得到的 label 形如：'2020-12-02'\n    formatter: '{d}日' // 得到的 label 形如：'2日'\n    \n\n**回调函数** 回调函数可以根据刻度值返回不同的格式，如果有复杂的时间格式化需求，也可以引用第三方的日期时间相关的库（如 [Moment.js][3]、[date-fns][4] 等），返回显示的文本。 示例： \n\n    // 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\n    formatter: function (value, index) {\n        // 格式化成月/日，只在第一个刻度显示年份\n        var date = new Date(value);\n        var texts = [(date.getMonth() + 1), date.getDate()];\n        if (index === 0) {\n            texts.unshift(date.getYear());\n        }\n        return texts.join('/');\n    }\n    \n\n**分级模板** 有时候，我们希望对不同的时间粒度采用不同的格式化策略。例如，在季度图表中，我们可能希望对每个月的第一天显示月份，而其他日期显示日期。我们可以使用以下方式实现该效果： 示例： \n\n    formatter: {\n        month: '{MMMM}', // 一月、二月、……\n        day: '{d}日' // 1日、2日、……\n    }\n    \n\n支持的分级以及各自默认的取值为： \n\n    {\n        year: '{yyyy}',\n        month: '{MMM}',\n        day: '{d}',\n        hour: '{HH}:{mm}',\n        minute: '{HH}:{mm}',\n        second: '{HH}:{mm}:{ss}',\n        millisecond: '{hh}:{mm}:{ss} {SSS}',\n        none: '{yyyy}-{MM}-{dd} {hh}:{mm}:{ss} {SSS}'\n    }\n    \n\n以 day 为例，当一个刻度点的值的小时、分钟、秒、毫秒都为 0 时，将采用 day 的分级值作为模板。none 表示当其他规则都不适用时采用的模板，也就是带有毫秒值的刻度点的模板。 **富文本** 以上这三种形式的 formatter 都支持富文本，所以可以做成一些复杂的效果。 示例： \n\n    xAxis: {\n        type: 'time',\n        axisLabel: {\n            formatter: {\n                // 一年的第一个月显示年度信息和月份信息\n                year: '{yearStyle|{yyyy}}\\n{monthStyle|{MMM}}',\n                month: '{monthStyle|{MMM}}'\n            },\n            rich: {\n                yearStyle: {\n                    // 让年度信息更醒目\n                    color: '#000',\n                    fontWeight: 'bold'\n                },\n                monthStyle: {\n                    color: '#999'\n                }\n            }\n        }\n    },\n    \n\n使用回调函数形式实现上面例子同样的效果： 示例： \n\n    xAxis: {\n        type: 'time',\n        axisLabel: {\n            formatter: function (value) {\n                const date = new Date(value);\n                const yearStart = new Date(value);\n                yearStart.setMonth(0);\n                yearStart.setDate(1);\n                yearStart.setHours(0);\n                yearStart.setMinutes(0);\n                yearStart.setSeconds(0);\n                yearStart.setMilliseconds(0);\n                // 判断一个刻度值知否为一年的开始\n                if (date.getTime() === yearStart.getTime()) {\n                    return '{year|' + date.getFullYear() + '}\\n'\n                        + '{month|' + (date.getMonth() + 1) + '月}';\n                }\n                else {\n                    return '{month|' + (date.getMonth() + 1) + '月}'\n                }\n            },\n            rich: {\n                year: {\n                    color: '#000',\n                    fontWeight: 'bold'\n                },\n                month: {\n                    color: '#999'\n                }\n            }\n        }\n    },\n    \n\n\n\n[0]: #.type\n[1]: https://github.com/apache/echarts/tree/master/src/i18n\n[2]: api.html#echarts.registerLocale\n[3]: https://momentjs.com/\n[4]: https://date-fns.org/",
        "uiControl": {
            "type": [
                "string",
                "Function"
            ]
        }
    },
    "axisLabel.showMinLabel": {
        "desc": " 是否显示最小 tick 的 label。可取值 true, false, null。默认自动判定（即如果标签重叠，不会显示最小 tick 的 label）。 ",
        "uiControl": {
            "type": "boolean"
        }
    },
    "axisLabel.showMaxLabel": {
        "desc": " 是否显示最大 tick 的 label。可取值 true, false, null。默认自动判定（即如果标签重叠，不会显示最大 tick 的 label）。 ",
        "uiControl": {
            "type": "boolean"
        }
    },
    "axisLabel.color": {
        "desc": " 刻度标签文字的颜色，默认取 [axisLine.lineStyle.color][0]。支持回调函数，格式如下 \n\n    (val: string) => Color\n    \n\n参数是标签的文本，返回颜色值，如下示例： \n\n    textStyle: {\n        color: function (value, index) {\n            return value >= 0 ? 'green' : 'red';\n        }\n    }\n    \n\n\n\n[0]: #.axisLine.lineStyle.color",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLabel.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "axisLabel.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "axisLabel.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "axisLabel.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "axisLabel.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "axisLabel.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "axisLabel.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "axisLabel.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "axisLabel.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "axisLabel.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisLabel.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisLabel.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "axisLabel.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "axisLabel.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLabel.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "axisLabel.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "axisLabel.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLabel.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisLabel.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisLabel.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "axisLabel.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "axisLabel.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 ",
        "uiControl": {
            "default": "'...'"
        }
    },
    "axisLabel.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n",
        "uiControl": {
            "default": "'none'"
        }
    },
    "axisLabel.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "axisLabel.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "axisLabel.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "axisLabel.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "axisLabel.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "axisLabel.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "axisLabel.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "axisLabel.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "axisLabel.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "axisLabel.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "axisLabel.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "axisLabel.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisLabel.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisLabel.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "axisLabel.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "axisLabel.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLabel.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "axisLabel.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "axisLabel.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "axisLabel.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "axisLabel.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "axisLabel.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "axisLabel.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "axisLabel.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "splitLine": {
        "desc": " 坐标轴在 [grid][0] 区域中的分隔线。\n\n[0]: #grid",
        "uiControl": {
            "type": "Object"
        }
    },
    "splitLine.show": {
        "desc": " 是否显示分隔线。默认数值轴显示，类目轴不显示。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "splitLine.lineStyle.color": {
        "desc": " 分隔线颜色，可以设置成单个颜色。 也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。 示例 \n\n    splitLine: {\n        lineStyle: {\n            // 使用深浅的间隔色\n            color: ['#aaa', '#ddd']\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "color"
        }
    },
    "splitLine.lineStyle.width": {
        "desc": " 分隔线线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "splitLine.lineStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "splitLine.lineStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "splitLine.lineStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "splitLine.lineStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "splitLine.lineStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "splitLine.lineStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "splitArea": {
        "desc": " 坐标轴在 [grid][0] 区域中的分隔区域，默认不显示。\n\n[0]: #grid",
        "uiControl": {
            "type": "Object"
        }
    },
    "splitArea.show": {
        "desc": " 是否显示分隔区域。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "splitArea.areaStyle": {
        "desc": " 分隔区域的样式设置。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "splitArea.areaStyle.color": {
        "desc": " 分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。 ",
        "uiControl": {
            "default": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']",
            "type": "Array"
        }
    },
    "splitArea.areaStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "splitArea.areaStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "splitArea.areaStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitArea.areaStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitArea.areaStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 ",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "indicator": {
        "desc": " 雷达图的指示器，用来指定雷达图中的多个变量（维度），如下示例。 \n\n    indicator: [\n       { name: '销售（sales）', max: 6500},\n       { name: '管理（Administration）', max: 16000, color: 'red'}, // 标签设置为红色\n       { name: '信息技术（Information Techology）', max: 30000},\n       { name: '客服（Customer Support）', max: 38000},\n       { name: '研发（Development）', max: 52000},\n       { name: '市场（Marketing）', max: 25000}\n    ]\n    \n\n",
        "uiControl": {
            "type": "Array"
        }
    },
    "indicator.name": {
        "desc": " 指示器名称。 ",
        "uiControl": {
            "type": "string"
        }
    },
    "indicator.max": {
        "desc": " 指示器的最大值，可选，建议设置 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "step": "1"
        }
    },
    "indicator.min": {
        "desc": " 指示器的最小值，可选，默认为 0。 ",
        "uiControl": {
            "type": "number",
            "step": "1"
        }
    },
    "indicator.color": {
        "desc": " 标签特定的颜色。 ",
        "uiControl": {
            "type": "color"
        }
    }
}