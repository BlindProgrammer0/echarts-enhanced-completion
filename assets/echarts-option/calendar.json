{
    "id": {
        "desc": " 组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。 ",
        "uiControl": {
            "type": "string"
        }
    },
    "zlevel": {
        "desc": " 所有图形的 zlevel 值。 zlevel用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的zlevel。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。 zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。 ",
        "uiControl": {
            "default": 0
        }
    },
    "z": {
        "desc": " 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。 z相比zlevel优先级更低，而且不会创建新的 Canvas。 ",
        "uiControl": {
            "default": 2
        }
    },
    "left": {
        "desc": " calendar组件离容器左侧的距离。 left 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比，也可以是 'left', 'center', 'right'。 如果 left 的值为'left', 'center', 'right'，组件会根据相应的位置自动对齐。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "top": {
        "desc": " calendar组件离容器上侧的距离。 top 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比，也可以是 'top', 'middle', 'bottom'。 如果 top 的值为'top', 'middle', 'bottom'，组件会根据相应的位置自动对齐。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "right": {
        "desc": " calendar组件离容器右侧的距离。 right 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比。 默认自适应。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "bottom": {
        "desc": " calendar组件离容器下侧的距离。 bottom 的值可以是像 20 这样的具体像素值，可以是像 '20%' 这样相对于容器高宽的百分比。 默认自适应。 ",
        "uiControl": {
            "type": "percent",
            "default": "0%"
        }
    },
    "width": {
        "desc": " 日历坐标的整体宽度 注意: 默认cellSize 为20，若设置了width的值, 则cellSize中的宽度强制转为auto; ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "height": {
        "desc": " 日历坐标的整体高度， 注意: 默认cellSize 为20，若设置了height的值, 则cellSize中的高度强制转为auto; ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "range": {
        "desc": " 必填，日历坐标的范围 支持多种格式 使用示例： \n\n    \n    // 某一年\n    range: 2017\n    \n    // 某个月\n    range: '2017-02'\n    \n    // 某个区间\n    range: ['2017-01-02', '2017-02-23']\n    \n    // 注意 此写法会识别为['2017-01-01', '2017-02-01']\n    range: ['2017-01', '2017-02']\n    \n    \n\n",
        "uiControl": {
            "type": [
                "number",
                "string",
                "Array"
            ]
        }
    },
    "cellSize": {
        "desc": " 日历每格框的大小，可设置单值 或数组 第一个元素是宽 第二个元素是高。 支持设置自适应：auto, 默认为高宽均为20 使用示例： \n\n    \n    // 设置宽高均为20\n    cellSize: 20\n    \n    // 设置宽为20，高为40\n    cellSize: [20, 40]\n    \n    // 设置宽高均为40\n    cellSize: [40]\n    \n    // 设置宽高均自适应\n    cellSize: 'auto'\n    \n    // 设置宽自适应，高为40\n    cellSize: ['auto', 40]\n    \n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "20"
        }
    },
    "orient": {
        "desc": " 日历坐标的布局朝向。 可选： \n\n* 'horizontal'\n* 'vertical'\n\n",
        "uiControl": {
            "type": "enum",
            "options": "horizontal,vertical",
            "default": "horizontal"
        }
    },
    "splitLine": {
        "desc": " 设置日历坐标分隔线的样式。 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "splitLine.show": {
        "desc": " 是否显示分隔线。默认显示。 ",
        "uiControl": {
            "type": "boolean",
            "show": "true"
        }
    },
    "splitLine.lineStyle.color": {
        "desc": " 分隔线线的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "splitLine.lineStyle.width": {
        "desc": " 分隔线线宽。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.type": {
        "desc": " 线的类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 dashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    type: [5, 10],\n    \n    dashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "splitLine.lineStyle.dashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 type 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "splitLine.lineStyle.cap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "splitLine.lineStyle.join": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "splitLine.lineStyle.miterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 join 为 miter 时， miterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "splitLine.lineStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "splitLine.lineStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "splitLine.lineStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 例如： \n\n    calendar: [{\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: '#000',\n                width: 1,\n                type: 'solid'\n            }\n        }\n    }]\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "itemStyle": {
        "desc": " 设置日历格的样式 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "itemStyle.color": {
        "desc": " calendar图形的颜色。 \n\n> 支持使用> rgb(255,255,255)> ，> rgba(255,255,255,1)> ，> #fff> 等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[> option.color][0]\n\n[0]: #color",
        "uiControl": {
            "type": "color"
        }
    },
    "itemStyle.borderColor": {
        "desc": " calendar图形的描边颜色。支持的颜色格式同 color，不支持回调函数。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "itemStyle.borderWidth": {
        "desc": " calendar描边线宽。为 0 时无描边。 ",
        "uiControl": {
            "type": "number",
            "value": "1",
            "min": "0",
            "step": "0.5"
        }
    },
    "itemStyle.borderType": {
        "desc": " calendar描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "itemStyle.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "itemStyle.borderCap": {
        "desc": ">  从 > v5.0.0>  开始支持 用于指定线段末端的绘制方式，可以是： \n\n* 'butt': 线段末端以方形结束。\n* 'round': 线段末端以圆形结束。\n* 'square': 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 'butt'。 更多详情可以参考 MDN [lineCap][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap",
        "uiControl": {
            "type": "enum",
            "default": "butt",
            "options": "butt,round,square"
        }
    },
    "itemStyle.borderJoin": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。 可以是： \n\n* 'bevel': 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n* 'round': 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n* 'miter': 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 borderMiterLimit 属性看到效果。\n\n默认值为 'bevel'。 更多详情可以参考 MDN [lineJoin][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin",
        "uiControl": {
            "type": "enum",
            "default": "bevel",
            "options": "bevel,round,miter"
        }
    },
    "itemStyle.borderMiterLimit": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置斜接面限制比例。只有当 borderJoin 为 miter 时， borderMiterLimit 才有效。 默认值为 10。负数、0、Infinity 和 NaN 均会被忽略。 更多详情可以参考 MDN [miterLimit][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "10"
        }
    },
    "itemStyle.shadowBlur": {
        "desc": " 图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX, shadowOffsetY 一起设置图形的阴影效果。 示例： \n\n    {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        shadowBlur: 10\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "",
            "min": "0",
            "step": "0.5"
        }
    },
    "itemStyle.shadowColor": {
        "desc": " 阴影颜色。支持的格式同color。 ",
        "uiControl": {
            "type": "color",
            "default": ""
        }
    },
    "itemStyle.shadowOffsetX": {
        "desc": " 阴影水平方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "itemStyle.shadowOffsetY": {
        "desc": " 阴影垂直方向上的偏移距离。 ",
        "uiControl": {
            "type": "number",
            "default": "0",
            "step": "0.5"
        }
    },
    "itemStyle.opacity": {
        "desc": " 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。 例如： \n\n    calendar: [{\n        itemStyle: {\n            color: '#fff',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    }]\n    \n\n",
        "uiControl": {
            "type": "number",
            "default": "1",
            "min": "0",
            "max": "1",
            "step": "0.01"
        }
    },
    "dayLabel": {
        "desc": " 设置日历坐标中 星期轴的样式 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "dayLabel.show": {
        "desc": " 是否在普通状态下显示标签。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "dayLabel.firstDay": {
        "desc": " 一周从周几开始，默认从周日开始 例如： \n\n    \n    calendar: [{\n        dayLabel: {\n            firstDay: 1 // 从周一开始\n        }\n    }]\n    \n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "max": "6",
            "step": "1"
        }
    },
    "dayLabel.margin": {
        "desc": " 星期标签与轴线之间的距离 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "dayLabel.position": {
        "desc": " 星期的位置 在星期轴的开头还是结尾。 可选： \n\n* 'start'\n* 'end'\n\n",
        "uiControl": {
            "type": "enum",
            "options": "start,end",
            "default": "start"
        }
    },
    "dayLabel.nameMap": {
        "desc": " 星期显示的效果，默认为'en' 可设置中英文以及自定义 下标0为对应星期天的文字显示 使用示例： \n\n    // 快捷设置英文 ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n    nameMap: 'en'\n    // 快捷设置中文 ['日', '一', '二', '三', '四', '五', '六']\n    nameMap: 'cn'\n    // 自定义设置： 中英文混杂 或者不显示\n    nameMap: ['S', '一', 'T', '三', '', '五', 'S'],\n    \n    calendar: [{\n        dayLabel: {\n            nameMap: 'en'\n        }\n    }]\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "en,cn",
            "default": "en"
        }
    },
    "dayLabel.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "dayLabel.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "dayLabel.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "dayLabel.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "dayLabel.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "dayLabel.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "dayLabel.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "dayLabel.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "dayLabel.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "dayLabel.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "dayLabel.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "dayLabel.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "dayLabel.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "dayLabel.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "dayLabel.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "dayLabel.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "dayLabel.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "dayLabel.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "dayLabel.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "dayLabel.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "dayLabel.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "dayLabel.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "dayLabel.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 ",
        "uiControl": {
            "default": "'...'"
        }
    },
    "dayLabel.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n",
        "uiControl": {
            "default": "'none'"
        }
    },
    "dayLabel.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "dayLabel.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "dayLabel.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "dayLabel.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "dayLabel.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "dayLabel.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "dayLabel.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "dayLabel.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "dayLabel.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "dayLabel.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "dayLabel.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "dayLabel.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "dayLabel.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "dayLabel.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "dayLabel.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "dayLabel.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "dayLabel.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "dayLabel.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "dayLabel.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "dayLabel.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "dayLabel.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "dayLabel.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "dayLabel.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "dayLabel.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel": {
        "desc": " 设置日历坐标中 月份轴的样式 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "monthLabel.show": {
        "desc": " 是否在普通状态下显示标签。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "monthLabel.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "monthLabel.margin": {
        "desc": " 月份标签与轴线之间的距离 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "5"
        }
    },
    "monthLabel.position": {
        "desc": " 月份的位置 在开头还是结尾。 可选： \n\n* 'start'\n* 'end'\n\n",
        "uiControl": {
            "type": "enum",
            "options": "start,end",
            "default": "start"
        }
    },
    "monthLabel.nameMap": {
        "desc": " 月份显示的效果，默认为'en' 可设置中英文以及自定义 下标0为对应一月的文字显示 使用示例： \n\n    // 快捷设置英文 [\n                    'Jan', 'Feb', 'Mar',\n                    'Apr', 'May', 'Jun',\n                    'Jul', 'Aug', 'Sep',\n                    'Oct', 'Nov', 'Dec'\n                ],\n    nameMap: 'en'\n    // 快捷设置中文 [\n                    '一月', '二月', '三月',\n                    '四月', '五月', '六月',\n                    '七月', '八月', '九月',\n                    '十月', '十一月', '十二月'\n                ]\n    nameMap: 'cn'\n    // 自定义设置： 中英文混杂 或者不显示\n    nameMap: [\n                '一月', 'Feb', '三月',\n                '四月', 'May', '六月',\n                '七月', '八月', '',\n                '十月', 'Nov', '十二月'\n            ],\n    \n    calendar: [{\n        monthLabel: {\n            nameMap: 'en'\n        }\n    }]\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "en,cn",
            "default": "en"
        }
    },
    "monthLabel.formatter": {
        "desc": " 用来格式化月份文本，支持字符串模板和回调函数两种形式。 示例： \n\n    // 使用字符串模板，例如：2017-02\n    /*\n        模板变量{nameMap} 月份原本名称 eg：'Feb'\n        模板变量{yyyy}   四位数年份 eg: 2017\n        模板变量{yy}   后两位数年份 eg: 17\n        模板变量{MM}   两位数月份 eg: 02\n        模板变量{M}   一位数月份 eg: 2\n    */\n    formatter: '{yyyy}-{MM}'\n    // 使用回调函数\n    /*\n        param.nameMap 月份原本名称 eg：'Feb'\n        param.yyyy   四位数年份 eg: 2017\n        param.yy   后两位数年份 eg: 17\n        param.MM   两位数月份 eg: 02\n        param.M   一位数月份 eg: 2\n    */\n    formatter: function (param) {\n        // ...\n        return param.MM;\n    }\n    \n\n",
        "uiControl": {
            "type": [
                "string",
                "Function"
            ]
        }
    },
    "monthLabel.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "monthLabel.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "monthLabel.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "monthLabel.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "monthLabel.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "monthLabel.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "monthLabel.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "monthLabel.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "monthLabel.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "monthLabel.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "monthLabel.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "monthLabel.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "monthLabel.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "monthLabel.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "monthLabel.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "monthLabel.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "monthLabel.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "monthLabel.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "monthLabel.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "monthLabel.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "monthLabel.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "monthLabel.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 ",
        "uiControl": {
            "default": "'...'"
        }
    },
    "monthLabel.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n",
        "uiControl": {
            "default": "'none'"
        }
    },
    "monthLabel.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "monthLabel.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "monthLabel.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "monthLabel.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "monthLabel.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "monthLabel.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "monthLabel.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "monthLabel.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "monthLabel.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "monthLabel.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "monthLabel.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "monthLabel.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "monthLabel.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "monthLabel.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "monthLabel.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "monthLabel.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "monthLabel.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "monthLabel.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "monthLabel.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "monthLabel.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "monthLabel.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "monthLabel.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "monthLabel.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "monthLabel.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel": {
        "desc": " 设置日历坐标中 年的样式 ",
        "uiControl": {
            "type": "Object"
        }
    },
    "yearLabel.show": {
        "desc": " 是否在普通状态下显示标签。 ",
        "uiControl": {
            "type": "boolean",
            "default": "true"
        }
    },
    "yearLabel.margin": {
        "desc": " 年份与轴线之间的距离 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "yearLabel.position": {
        "desc": " 年份的位置 默认横向是'left' 竖向是'top' 可选： \n\n* 'top'\n* 'bottom'\n* 'left'\n* 'right'\n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,bottom,left,right"
        }
    },
    "yearLabel.formatter": {
        "desc": " 用来格式化年份文本，支持字符串模板和回调函数两种形式。 默认显示当前范围的年 若区间跨年 显示('start-end') 示例： \n\n    // 使用字符串模板，例如：['2017-10-11', '2018-01-21']\n    /*\n        模板变量{nameMap} 年份原本名称 eg：'2017-2018'\n        模板变量{start}   开始年份 eg: 2017\n        模板变量{end}   结束年份 eg: 2018\n    */\n    \n    formatter: '{start}-{end}'\n    // 使用回调函数\n    /*\n        param.nameMap 年份原本名称 eg：'2017-2018'\n        param.start   开始年份 eg: 2017\n        param.end   结束年份 eg: 2018\n    */\n    formatter: function (param) {\n        // ...\n        return param.end;\n    }\n    \n\n",
        "uiControl": {
            "type": [
                "string",
                "Function"
            ]
        }
    },
    "yearLabel.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "yearLabel.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "yearLabel.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "yearLabel.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "yearLabel.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "yearLabel.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "yearLabel.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "yearLabel.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "yearLabel.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "yearLabel.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "yearLabel.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "yearLabel.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "yearLabel.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "yearLabel.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "yearLabel.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "yearLabel.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.width": {
        "desc": " 文本显示宽度。 ",
        "uiControl": {
            "type": "number",
            "default": "100",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "yearLabel.height": {
        "desc": " 文本显示高度。 ",
        "uiControl": {
            "type": "number",
            "default": "50",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "yearLabel.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "yearLabel.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "yearLabel.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "yearLabel.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "yearLabel.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.overflow": {
        "desc": " 文字超出宽度是否截断或者换行。配置width时有效 \n\n* 'truncate' 截断，并在末尾显示ellipsis配置的文本，默认为...\n* 'break' 换行\n* 'breakAll' 换行，跟'break'不同的是，在英语等拉丁文中，'breakAll'还会强制单词内换行\n\n",
        "uiControl": {
            "type": "enum",
            "options": "truncate,break,breakAll"
        }
    },
    "yearLabel.ellipsis": {
        "desc": " 在overflow配置为'truncate'的时候，可以通过该属性配置末尾显示的文本。 ",
        "uiControl": {
            "default": "'...'"
        }
    },
    "yearLabel.lineOverflow": {
        "desc": " 文本超出高度部分是否截断，配置height时有效。 \n\n* 'truncate' 在文本行数超出高度部分截断。\n\n",
        "uiControl": {
            "default": "'none'"
        }
    },
    "yearLabel.rich": {
        "desc": " 在 rich 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。 例如： \n\n    label: {\n        // 在文本中，可以对部分文本采用 rich 中定义样式。\n        // 这里需要在文本中使用标记符号：\n        // `{styleName|text content text content}` 标记样式名。\n        // 注意，换行仍是使用 '\\n'。\n        formatter: [\n            '{a|这段文本采用样式a}',\n            '{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n        ].join('\\n'),\n    \n        rich: {\n            a: {\n                color: 'red',\n                lineHeight: 10\n            },\n            b: {\n                backgroundColor: {\n                    image: 'xxx/xxx.jpg'\n                },\n                height: 40\n            },\n            x: {\n                fontSize: 18,\n                fontFamily: 'Microsoft YaHei',\n                borderColor: '#449933',\n                borderRadius: 4\n            },\n            ...\n        }\n    }\n    \n\n详情参见教程：[富文本标签][0]\n\n[0]: tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE",
        "uiControl": {
            "type": "Object"
        }
    },
    "yearLabel.rich.<style_name>.color": {
        "desc": " 文字的颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "null"
        }
    },
    "yearLabel.rich.<style_name>.fontStyle": {
        "desc": " 文字字体的风格。 可选： \n\n* 'normal'\n* 'italic'\n* 'oblique'\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,italic,oblique"
        }
    },
    "yearLabel.rich.<style_name>.fontWeight": {
        "desc": " 文字字体的粗细。 可选： \n\n* 'normal'\n* 'bold'\n* 'bolder'\n* 'lighter'\n* 100 | 200 | 300 | 400...\n\n",
        "uiControl": {
            "type": "enum",
            "default": "normal",
            "options": "normal,bold,bolder,lighter"
        }
    },
    "yearLabel.rich.<style_name>.fontFamily": {
        "desc": " 文字的字体系列。 还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ... ",
        "uiControl": {
            "type": "enum",
            "default": "sans-serif",
            "options": "sans-serif,serif,monospace,Arial,Courier New"
        }
    },
    "yearLabel.rich.<style_name>.fontSize": {
        "desc": " 文字的字体大小。 ",
        "uiControl": {
            "type": "number",
            "default": "12",
            "min": "1",
            "step": "1"
        }
    },
    "yearLabel.rich.<style_name>.align": {
        "desc": " 文字水平对齐方式，默认自动。 可选： \n\n* 'left'\n* 'center'\n* 'right'\n\nrich 中如果没有设置 align，则会取父层级的 align。例如： \n\n    {\n        align: right,\n        rich: {\n            a: {\n                // 没有设置 `align`，则 `align` 为 right\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "left,center,right"
        }
    },
    "yearLabel.rich.<style_name>.verticalAlign": {
        "desc": " 文字垂直对齐方式，默认自动。 可选： \n\n* 'top'\n* 'middle'\n* 'bottom'\n\nrich 中如果没有设置 verticalAlign，则会取父层级的 verticalAlign。例如： \n\n    {\n        verticalAlign: bottom,\n        rich: {\n            a: {\n                // 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "enum",
            "options": "top,middle,bottom"
        }
    },
    "yearLabel.rich.<style_name>.lineHeight": {
        "desc": " 行高。 rich 中如果没有设置 lineHeight，则会取父层级的 lineHeight。例如： \n\n    {\n        lineHeight: 56,\n        rich: {\n            a: {\n                // 没有设置 `lineHeight`，则 `lineHeight` 为 56\n            }\n        }\n    }\n    \n\n",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "12"
        }
    },
    "yearLabel.rich.<style_name>.backgroundColor": {
        "desc": " 文字块背景色。 可以使用颜色值，例如：'#123234', 'red', 'rgba(0,23,11,0.3)'。 也可以直接使用图片，例如： \n\n    backgroundColor: {\n        image: 'xxx/xxx.png'\n        // 这里可以是图片的 URL，\n        // 或者图片的 dataURI，\n        // 或者 HTMLImageElement 对象，\n        // 或者 HTMLCanvasElement 对象。\n    }\n    \n\n当使用图片的时候，可以使用 width 或 height 指定高宽，也可以不指定自适应。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "yearLabel.rich.<style_name>.borderColor": {
        "desc": " 文字块边框颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#fff"
        }
    },
    "yearLabel.rich.<style_name>.borderWidth": {
        "desc": " 文字块边框宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.borderType": {
        "desc": " 文字块边框描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 borderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    borderType: [5, 10],\n    \n    borderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "yearLabel.rich.<style_name>.borderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 borderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "yearLabel.rich.<style_name>.borderRadius": {
        "desc": " 文字块的圆角。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "yearLabel.rich.<style_name>.padding": {
        "desc": " 文字块的内边距。例如： \n\n* padding: [3, 4, 5, 6]：表示 [上, 右, 下, 左] 的边距。\n* padding: 4：表示 padding: [4, 4, 4, 4]。\n* padding: [3, 4]：表示 padding: [3, 4, 3, 4]。\n\n注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 ",
        "uiControl": {
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "yearLabel.rich.<style_name>.shadowColor": {
        "desc": " 文字块的背景阴影颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "yearLabel.rich.<style_name>.shadowBlur": {
        "desc": " 文字块的背景阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.shadowOffsetX": {
        "desc": " 文字块的背景阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.shadowOffsetY": {
        "desc": " 文字块的背景阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.width": {
        "desc": " 文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 width 也可以是百分比字符串，如 '100%'。表示的是所在文本块的 contentWidth（即不包含文本块的 padding）的百分之多少。之所以以 contentWidth 做基数，因为每个文本片段只能基于 content box 布局。如果以 outerWidth 做基数，则百分比的计算在实用中不具有意义，可能会超出。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "yearLabel.rich.<style_name>.height": {
        "desc": " 文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 backgroundColor）时，可能会使用它。 注意，文字块的 width 和 height 指定的是内容高宽，不包含 padding。 注意，如果不定义 rich 属性，则不能指定 width 和 height。 ",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "yearLabel.rich.<style_name>.textBorderColor": {
        "desc": " 文字本身的描边颜色。 ",
        "uiControl": {
            "type": "color"
        }
    },
    "yearLabel.rich.<style_name>.textBorderWidth": {
        "desc": " 文字本身的描边宽度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.textBorderType": {
        "desc": " 文字本身的描边类型。 可选： \n\n* 'solid'\n* 'dashed'\n* 'dotted'\n\n自 v5.0.0 开始，也可以是 number 或者 number 数组，用以指定线条的 [dash array][0]，配合 textBorderDashOffset 可实现更灵活的虚线效果。 例如： \n\n    {\n    \n    textBorderType: [5, 10],\n    \n    textBorderDashOffset: 5\n    }\n    \n\n\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray",
        "uiControl": {
            "type": "enum",
            "default": "solid",
            "options": "solid,dashed,dotted"
        }
    },
    "yearLabel.rich.<style_name>.textBorderDashOffset": {
        "desc": ">  从 > v5.0.0>  开始支持 用于设置虚线的偏移量，可搭配 textBorderType 指定 dash array 实现灵活的虚线效果。 更多详情可以参考 MDN [lineDashOffset][0]。\n\n[0]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "1",
            "default": "0"
        }
    },
    "yearLabel.rich.<style_name>.textShadowColor": {
        "desc": " 文字本身的阴影颜色。 ",
        "uiControl": {
            "type": "color",
            "default": "#000"
        }
    },
    "yearLabel.rich.<style_name>.textShadowBlur": {
        "desc": " 文字本身的阴影长度。 ",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.textShadowOffsetX": {
        "desc": " 文字本身的阴影 X 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "yearLabel.rich.<style_name>.textShadowOffsetY": {
        "desc": " 文字本身的阴影 Y 偏移。 ",
        "uiControl": {
            "type": "number",
            "step": "0.5"
        }
    },
    "silent": {
        "desc": " 图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。 ",
        "uiControl": {
            "type": "boolean"
        }
    }
}