{
    "id": {
        "desc": "组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。",
        "uiControl": {
            "type": "string"
        }
    },
    "show": {
        "desc": "是否显示标题组件。",
        "uiControl": {
            "default": "true",
            "type": "boolean"
        }
    },
    "text": {
        "desc": "主标题文本，支持使用 `\\n` 换行。",
        "uiControl": {
            "default": "''",
            "type": "text"
        }
    },
    "link": {
        "desc": "主标题文本超链接。",
        "uiControl": {
            "default": "''",
            "type": "string"
        }
    },
    "target": {
        "desc": "指定窗口打开主标题超链接。\n\n**可选：**\n\n+ `'self'` 当前窗口打开\n\n+ `'blank'` 新窗口打开",
        "uiControl": {
            "default": "'blank'",
            "type": "string"
        }
    },
    "textStyle": {
        "desc": "",
        "uiControl": {
            "type": "Object"
        }
    },
    "textStyle.color": {
        "desc": "主标题文字的颜色。",
        "uiControl": {
            "default": "'#333'",
            "type": "color"
        }
    },
    "textStyle.fontStyle": {
        "desc": "主标题文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
        "uiControl": {
            "type": "enum",
            "options": "'normal','italic','oblique'"
        }
    },
    "textStyle.fontWeight": {
        "desc": "主标题文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
        "uiControl": {
            "type": "enum",
            "options": "'normal','bold','bolder','lighter'"
        }
    },
    "textStyle.fontFamily": {
        "desc": "主标题文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
        "uiControl": {
            "type": "enum",
            "options": "'sans-serif','serif','monospace','Arial','Courier New'"
        }
    },
    "textStyle.fontSize": {
        "desc": "主标题文字的字体大小。",
        "uiControl": {
            "default": "18",
            "type": "number",
            "min": "1",
            "step": "1"
        }
    },
    "textStyle.lineHeight": {
        "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "textStyle.width": {
        "desc": "文本显示宽度。",
        "uiControl": {
            "default": "100",
            "type": "number",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "textStyle.height": {
        "desc": "文本显示高度。",
        "uiControl": {
            "default": "50",
            "type": "number",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "textStyle.textBorderColor": {
        "desc": "文字本身的描边颜色。",
        "uiControl": {
            "type": "color"
        }
    },
    "textStyle.textBorderWidth": {
        "desc": "文字本身的描边宽度。",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.textBorderType": {
        "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "textStyle.textBorderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "textStyle.textShadowColor": {
        "desc": "文字本身的阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "textStyle.textShadowBlur": {
        "desc": "文字本身的阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.textShadowOffsetX": {
        "desc": "文字本身的阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.textShadowOffsetY": {
        "desc": "文字本身的阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.overflow": {
        "desc": "文字超出宽度是否截断或者换行。配置`width`时有效\n\n+ `'truncate'` 截断，并在末尾显示`ellipsis`配置的文本，默认为`...`\n+ `'break'` 换行\n+ `'breakAll'` 换行，跟`'break'`不同的是，在英语等拉丁文中，`'breakAll'`还会强制单词内换行",
        "uiControl": {
            "type": "enum",
            "options": "'truncate','break','breakAll'"
        }
    },
    "textStyle.ellipsis": {
        "desc": "在`overflow`配置为`'truncate'`的时候，可以通过该属性配置末尾显示的文本。",
        "uiControl": {
            "default": "'...'",
            "type": "string"
        }
    },
    "textStyle.lineOverflow": {
        "desc": "文本超出高度部分是否截断，配置`height`时有效。\n\n+ `'truncate'` 在文本行数超出高度部分截断。",
        "uiControl": {
            "default": "'none'",
            "type": "string"
        }
    },
    "textStyle.rich": {
        "desc": "在 `rich` 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。\n\n例如：\n\n```js\nlabel: {\n// 在文本中，可以对部分文本采用 rich 中定义样式。\n// 这里需要在文本中使用标记符号：\n// `{styleName|text content text content}` 标记样式名。\n// 注意，换行仍是使用 '\\n'。\nformatter: [\n'{a|这段文本采用样式a}',\n'{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n].join('\\n'),\n\nrich: {\na: {\ncolor: 'red',\nlineHeight: 10\n},\nb: {\nbackgroundColor: {\nimage: 'xxx/xxx.jpg'\n},\nheight: 40\n},\nx: {\nfontSize: 18,\nfontFamily: 'Microsoft YaHei',\nborderColor: '#449933',\nborderRadius: 4\n},\n...\n}\n}\n```\n\n\n详情参见教程：[富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)",
        "uiControl": {
            "type": "Object"
        }
    },
    "textStyle.rich.<style_name>": {
        "desc": "",
        "uiControl": {
            "type": "Object"
        }
    },
    "textStyle.rich.<style_name>.color": {
        "desc": "文字的颜色。",
        "uiControl": {
            "default": "\"#fff\"",
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.fontStyle": {
        "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
        "uiControl": {
            "type": "enum",
            "options": "'normal','italic','oblique'"
        }
    },
    "textStyle.rich.<style_name>.fontWeight": {
        "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
        "uiControl": {
            "type": "enum",
            "options": "'normal','bold','bolder','lighter'"
        }
    },
    "textStyle.rich.<style_name>.fontFamily": {
        "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
        "uiControl": {
            "type": "enum",
            "options": "'sans-serif','serif','monospace','Arial','Courier New'"
        }
    },
    "textStyle.rich.<style_name>.fontSize": {
        "desc": "文字的字体大小。",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "1",
            "step": "1"
        }
    },
    "textStyle.rich.<style_name>.align": {
        "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```js\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'left','center','right'"
        }
    },
    "textStyle.rich.<style_name>.verticalAlign": {
        "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```js\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'top','middle','bottom'"
        }
    },
    "textStyle.rich.<style_name>.lineHeight": {
        "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "textStyle.rich.<style_name>.backgroundColor": {
        "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```js\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.borderColor": {
        "desc": "文字块边框颜色。",
        "uiControl": {
            "default": "'#fff'",
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.borderWidth": {
        "desc": "文字块边框宽度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.borderType": {
        "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "textStyle.rich.<style_name>.borderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "textStyle.rich.<style_name>.borderRadius": {
        "desc": "文字块的圆角。",
        "uiControl": {
            "default": "0",
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "textStyle.rich.<style_name>.padding": {
        "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
        "uiControl": {
            "default": "0",
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "textStyle.rich.<style_name>.shadowColor": {
        "desc": "文字块的背景阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.shadowBlur": {
        "desc": "文字块的背景阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.shadowOffsetX": {
        "desc": "文字块的背景阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.shadowOffsetY": {
        "desc": "文字块的背景阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.width": {
        "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "textStyle.rich.<style_name>.height": {
        "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "textStyle.rich.<style_name>.textBorderColor": {
        "desc": "文字本身的描边颜色。",
        "uiControl": {
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.textBorderWidth": {
        "desc": "文字本身的描边宽度。",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textBorderType": {
        "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "textStyle.rich.<style_name>.textBorderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "textStyle.rich.<style_name>.textShadowColor": {
        "desc": "文字本身的阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "textStyle.rich.<style_name>.textShadowBlur": {
        "desc": "文字本身的阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textShadowOffsetX": {
        "desc": "文字本身的阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textStyle.rich.<style_name>.textShadowOffsetY": {
        "desc": "文字本身的阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtext": {
        "desc": "副标题文本，支持使用 `\\n` 换行。",
        "uiControl": {
            "default": "''",
            "type": "text"
        }
    },
    "sublink": {
        "desc": "副标题文本超链接。",
        "uiControl": {
            "default": "''",
            "type": "string"
        }
    },
    "subtarget": {
        "desc": "指定窗口打开副标题超链接，可选：\n\n+ `'self'` 当前窗口打开\n\n+ `'blank'` 新窗口打开",
        "uiControl": {
            "default": "'blank'",
            "type": "string"
        }
    },
    "subtextStyle": {
        "desc": "",
        "uiControl": {
            "type": "Object"
        }
    },
    "subtextStyle.color": {
        "desc": "副标题文字的颜色。",
        "uiControl": {
            "default": "'#aaa'",
            "type": "color"
        }
    },
    "subtextStyle.fontStyle": {
        "desc": "副标题文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
        "uiControl": {
            "type": "enum",
            "options": "'normal','italic','oblique'"
        }
    },
    "subtextStyle.fontWeight": {
        "desc": "副标题文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
        "uiControl": {
            "type": "enum",
            "options": "'normal','bold','bolder','lighter'"
        }
    },
    "subtextStyle.fontFamily": {
        "desc": "副标题文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
        "uiControl": {
            "type": "enum",
            "options": "'sans-serif','serif','monospace','Arial','Courier New'"
        }
    },
    "subtextStyle.fontSize": {
        "desc": "副标题文字的字体大小。",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "1",
            "step": "1"
        }
    },
    "subtextStyle.align": {
        "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```js\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'left','center','right'"
        }
    },
    "subtextStyle.verticalAlign": {
        "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```js\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'top','middle','bottom'"
        }
    },
    "subtextStyle.lineHeight": {
        "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "subtextStyle.width": {
        "desc": "文本显示宽度。",
        "uiControl": {
            "default": "100",
            "type": "number",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "subtextStyle.height": {
        "desc": "文本显示高度。",
        "uiControl": {
            "default": "50",
            "type": "number",
            "min": "1",
            "max": "500",
            "step": "1"
        }
    },
    "subtextStyle.textBorderColor": {
        "desc": "文字本身的描边颜色。",
        "uiControl": {
            "type": "color"
        }
    },
    "subtextStyle.textBorderWidth": {
        "desc": "文字本身的描边宽度。",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.textBorderType": {
        "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "subtextStyle.textBorderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "subtextStyle.textShadowColor": {
        "desc": "文字本身的阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "subtextStyle.textShadowBlur": {
        "desc": "文字本身的阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.textShadowOffsetX": {
        "desc": "文字本身的阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.textShadowOffsetY": {
        "desc": "文字本身的阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.overflow": {
        "desc": "文字超出宽度是否截断或者换行。配置`width`时有效\n\n+ `'truncate'` 截断，并在末尾显示`ellipsis`配置的文本，默认为`...`\n+ `'break'` 换行\n+ `'breakAll'` 换行，跟`'break'`不同的是，在英语等拉丁文中，`'breakAll'`还会强制单词内换行",
        "uiControl": {
            "type": "enum",
            "options": "'truncate','break','breakAll'"
        }
    },
    "subtextStyle.ellipsis": {
        "desc": "在`overflow`配置为`'truncate'`的时候，可以通过该属性配置末尾显示的文本。",
        "uiControl": {
            "default": "'...'",
            "type": "string"
        }
    },
    "subtextStyle.lineOverflow": {
        "desc": "文本超出高度部分是否截断，配置`height`时有效。\n\n+ `'truncate'` 在文本行数超出高度部分截断。",
        "uiControl": {
            "default": "'none'",
            "type": "string"
        }
    },
    "subtextStyle.rich": {
        "desc": "在 `rich` 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。\n\n例如：\n\n```js\nlabel: {\n// 在文本中，可以对部分文本采用 rich 中定义样式。\n// 这里需要在文本中使用标记符号：\n// `{styleName|text content text content}` 标记样式名。\n// 注意，换行仍是使用 '\\n'。\nformatter: [\n'{a|这段文本采用样式a}',\n'{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n].join('\\n'),\n\nrich: {\na: {\ncolor: 'red',\nlineHeight: 10\n},\nb: {\nbackgroundColor: {\nimage: 'xxx/xxx.jpg'\n},\nheight: 40\n},\nx: {\nfontSize: 18,\nfontFamily: 'Microsoft YaHei',\nborderColor: '#449933',\nborderRadius: 4\n},\n...\n}\n}\n```\n\n\n详情参见教程：[富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)",
        "uiControl": {
            "type": "Object"
        }
    },
    "subtextStyle.rich.<style_name>": {
        "desc": "",
        "uiControl": {
            "type": "Object"
        }
    },
    "subtextStyle.rich.<style_name>.color": {
        "desc": "文字的颜色。",
        "uiControl": {
            "default": "\"#fff\"",
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.fontStyle": {
        "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
        "uiControl": {
            "type": "enum",
            "options": "'normal','italic','oblique'"
        }
    },
    "subtextStyle.rich.<style_name>.fontWeight": {
        "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
        "uiControl": {
            "type": "enum",
            "options": "'normal','bold','bolder','lighter'"
        }
    },
    "subtextStyle.rich.<style_name>.fontFamily": {
        "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
        "uiControl": {
            "type": "enum",
            "options": "'sans-serif','serif','monospace','Arial','Courier New'"
        }
    },
    "subtextStyle.rich.<style_name>.fontSize": {
        "desc": "文字的字体大小。",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "1",
            "step": "1"
        }
    },
    "subtextStyle.rich.<style_name>.align": {
        "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```js\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'left','center','right'"
        }
    },
    "subtextStyle.rich.<style_name>.verticalAlign": {
        "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```js\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'top','middle','bottom'"
        }
    },
    "subtextStyle.rich.<style_name>.lineHeight": {
        "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
        "uiControl": {
            "default": "12",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "subtextStyle.rich.<style_name>.backgroundColor": {
        "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```js\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.borderColor": {
        "desc": "文字块边框颜色。",
        "uiControl": {
            "default": "'#fff'",
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.borderWidth": {
        "desc": "文字块边框宽度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.borderType": {
        "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "subtextStyle.rich.<style_name>.borderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "subtextStyle.rich.<style_name>.borderRadius": {
        "desc": "文字块的圆角。",
        "uiControl": {
            "default": "0",
            "type": "vector",
            "min": "0",
            "dims": "LT,RT, RB, LB"
        }
    },
    "subtextStyle.rich.<style_name>.padding": {
        "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
        "uiControl": {
            "default": "0",
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "subtextStyle.rich.<style_name>.shadowColor": {
        "desc": "文字块的背景阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.shadowBlur": {
        "desc": "文字块的背景阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.shadowOffsetX": {
        "desc": "文字块的背景阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.shadowOffsetY": {
        "desc": "文字块的背景阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.width": {
        "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "subtextStyle.rich.<style_name>.height": {
        "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
        "uiControl": {
            "type": [
                "number",
                "string"
            ]
        }
    },
    "subtextStyle.rich.<style_name>.textBorderColor": {
        "desc": "文字本身的描边颜色。",
        "uiControl": {
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderWidth": {
        "desc": "文字本身的描边宽度。",
        "uiControl": {
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderType": {
        "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```js\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
        "uiControl": {
            "type": "enum",
            "options": "'solid','dashed','dotted'"
        }
    },
    "subtextStyle.rich.<style_name>.textBorderDashOffset": {
        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowColor": {
        "desc": "文字本身的阴影颜色。",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowBlur": {
        "desc": "文字本身的阴影长度。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowOffsetX": {
        "desc": "文字本身的阴影 X 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "subtextStyle.rich.<style_name>.textShadowOffsetY": {
        "desc": "文字本身的阴影 Y 偏移。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "textAlign": {
        "desc": "整体（包括 text 和 subtext）的水平对齐。\n\n可选值：`'auto'`、`'left'`、`'right'`、`'center'`。",
        "uiControl": {
            "type": "enum",
            "options": "'auto','left','center','right'"
        }
    },
    "textVerticalAlign": {
        "desc": "整体（包括 text 和 subtext）的垂直对齐。\n\n可选值：`'auto'`、`'top'`、`'bottom'`、`'middle'`。",
        "uiControl": {
            "type": "enum",
            "options": "'auto','top','middle','bottom'"
        }
    },
    "triggerEvent": {
        "desc": "是否触发事件。",
        "uiControl": {
            "default": "false",
            "type": "boolean"
        }
    },
    "padding": {
        "desc": "标题内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。\n\n使用示例：\n```js\n// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n5,  // 上\n10, // 右\n5,  // 下\n10, // 左\n]\n```",
        "uiControl": {
            "default": "5",
            "type": "vector",
            "min": "0",
            "dims": "T,R,B,L"
        }
    },
    "itemGap": {
        "desc": "主副标题之间的间距。",
        "uiControl": {
            "default": "10",
            "type": "number",
            "min": "0",
            "step": "1"
        }
    },
    "zlevel": {
        "desc": "所有图形的 zlevel 值。\n\n`zlevel`用于 Canvas 分层，不同`zlevel`值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的`zlevel`。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。\n\n`zlevel` 大的 Canvas 会放在 `zlevel` 小的 Canvas 的上面。",
        "uiControl": {
            "default": "0",
            "type": "number"
        }
    },
    "z": {
        "desc": "组件的所有图形的`z`值。控制图形的前后顺序。`z`值小的图形会被`z`值大的图形覆盖。\n\n`z`相比`zlevel`优先级更低，而且不会创建新的 Canvas。",
        "uiControl": {
            "default": "2",
            "type": "number"
        }
    },
    "left": {
        "desc": "title 组件离容器左侧的距离。\n\n`left` 的值可以是像 `20` 这样的具体像素值，可以是像 `'20%'` 这样相对于容器高宽的百分比，也可以是 `'left'`, `'center'`, `'right'`。\n\n如果 `left` 的值为`'left'`, `'center'`, `'right'`，组件会根据相应的位置自动对齐。",
        "uiControl": {
            "default": "'auto'",
            "type": "percent"
        }
    },
    "top": {
        "desc": "title 组件离容器上侧的距离。\n\n`top` 的值可以是像 `20` 这样的具体像素值，可以是像 `'20%'` 这样相对于容器高宽的百分比，也可以是 `'top'`, `'middle'`, `'bottom'`。\n\n如果 `top` 的值为`'top'`, `'middle'`, `'bottom'`，组件会根据相应的位置自动对齐。",
        "uiControl": {
            "default": "'auto'",
            "type": "percent"
        }
    },
    "right": {
        "desc": "title 组件离容器右侧的距离。\n\n`right` 的值可以是像 `20` 这样的具体像素值，可以是像 `'20%'` 这样相对于容器高宽的百分比。\n\n默认自适应。",
        "uiControl": {
            "default": "'auto'",
            "type": "percent"
        }
    },
    "bottom": {
        "desc": "title 组件离容器下侧的距离。\n\nbottom 的值可以是像 `20` 这样的具体像素值，可以是像 `'20%'` 这样相对于容器高宽的百分比。\n\n默认自适应。",
        "uiControl": {
            "default": "'auto'",
            "type": "percent"
        }
    },
    "backgroundColor": {
        "desc": "标题背景色，默认透明。\n\n> 颜色可以使用 RGB 表示，比如 `'rgb(128, 128, 128)'`   ，如果想要加上 alpha 通道，可以使用 RGBA，比如 `'rgba(128, 128, 128, 0.5)'`，也可以使用十六进制格式，比如 `'#ccc'`",
        "uiControl": {
            "default": "'transparent'",
            "type": "color"
        }
    },
    "borderColor": {
        "desc": "标题的边框颜色。支持的颜色格式同 backgroundColor。",
        "uiControl": {
            "default": "'#ccc'",
            "type": "color"
        }
    },
    "borderWidth": {
        "desc": "标题的边框线宽。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "borderRadius": {
        "desc": "圆角半径，单位px，支持传入数组分别指定 4 个圆角半径。\n如:\n```\nborderRadius: 5, // 统一设置四个角的圆角大小\nborderRadius: [5, 5, 0, 0] //（顺时针左上，右上，右下，左下）\n```",
        "uiControl": {
            "default": "0",
            "type": "vector",
            "min": "0",
            "dims": "LT,RT,RB,LB"
        }
    },
    "shadowBlur": {
        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```js\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```\n\n\n**注意**：此配置项生效的前提是，设置了 `show: true` 以及值不为 `tranparent` 的背景色 `backgroundColor`。",
        "uiControl": {
            "default": "",
            "type": "number",
            "min": "0",
            "step": "0.5"
        }
    },
    "shadowColor": {
        "desc": "阴影颜色。支持的格式同`color`。\n\n\n**注意**：此配置项生效的前提是，设置了 `show: true`。",
        "uiControl": {
            "default": "",
            "type": "color"
        }
    },
    "shadowOffsetX": {
        "desc": "阴影水平方向上的偏移距离。\n\n\n**注意**：此配置项生效的前提是，设置了 `show: true`。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    },
    "shadowOffsetY": {
        "desc": "阴影垂直方向上的偏移距离。\n\n\n**注意**：此配置项生效的前提是，设置了 `show: true`。",
        "uiControl": {
            "default": "0",
            "type": "number",
            "step": "0.5"
        }
    }
}