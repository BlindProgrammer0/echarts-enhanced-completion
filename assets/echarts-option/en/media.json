{
    "query": {
        "desc": " If more than one properties used, it means \"and\". ",
        "uiControl": {
            "type": "Object"
        }
    },
    "query.minAspectRatio": {
        "desc": " That is the radio of width / height. The value can be like 1.3. ",
        "uiControl": {
            "type": "number"
        }
    },
    "option": {
        "desc": " Each item of this array is an echarts option (ECUnitOption). It will be applied when this query is matched. Color can be represented in RGB, for example 'rgb(128, 128, 128)'. RGBA can be used when you need alpha channel, for example 'rgba(128, 128, 128, 0.5)'. You may also use hexadecimal format, for example '#ccc'. Gradient color and texture are also supported besides single colors. \n\n    // Linear gradient. First four parameters are x0, y0, x2, and y2, each ranged from 0 to 1, standing for percentage in the bounding box. If global is `true`, then the first four parameters are in absolute pixel positions.\n    color: {\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 0,\n        y2: 1,\n        colorStops: [{\n            offset: 0, color: 'red' // color at 0% position\n        }, {\n            offset: 1, color: 'blue' // color at 100% position\n        }],\n        global: false // false by default\n    }\n    // Radial gradient. First three parameters are x and y positions of center, and radius, similar to linear gradient.\n    color: {\n        type: 'radial',\n        x: 0.5,\n        y: 0.5,\n        r: 0.5,\n        colorStops: [{\n            offset: 0, color: 'red' // color at 0% position\n        }, {\n            offset: 1, color: 'blue' // color at 100% position\n        }],\n        global: false // false by default\n    }\n    // Fill with texture\n    color: {\n        image: imageDom, // HTMLImageElement, and HTMLCanvasElement are supported, while string path is not supported\n        repeat: 'repeat' // whether to repeat texture, whose value can be repeat-x, repeat-y, or no-repeat\n    }\n    \n\n",
        "uiControl": {
            "type": "Object"
        }
    }
}